/* 
mzCanvas a TypeScript-based library for manipulating canvas element and 2D graphics in the browser.
Version: 1.0.0
Author: Miriam Zusin     
Contact: miriam.zusin@gmail.com
Documentation: https://github.com/mzusin/mz-canvas
Licensed GPLv3 for open source use, or Commercial License for commercial use - https://github.com/mzusin/index/blob/main/LICENSE.md                 
*/
var c=(e,t)=>{for(let l of t){let n=l[1];if(n===void 0)continue;let i=l[0];e.setAttribute(i,n.toString())}},s=e=>{let t=document.createElement("canvas");return t.width=e.width,t.height=e.height,c(t,[["id",e.id],["class",e.classes],["style",e.style],["title",e.title],["tabindex",e.tabindex],["role",e.role]]),e.fallback&&(t.textContent=e.fallback),{ctx:typeof t.getContext=="function"?t.getContext("2d"):null,$canvas:t}},r=(e,t)=>{e.lineWidth&&(t.lineWidth=e.lineWidth),e.strokeStyle&&(t.strokeStyle=e.strokeStyle)},o=(e,t)=>{e.fillStyle&&(t.fillStyle=e.fillStyle)};var g=(e,t)=>{let{x:l,y:n,w:i,h:a}=e;if(e.clear){t.clearRect(l,n,i,a);return}if(e.radii){o(e,t),r(e,t),t.beginPath(),t.roundRect(l,n,i,a,e.radii),e.fillStyle&&t.fill(),e.strokeStyle&&t.stroke();return}e.fillStyle&&(o(e,t),t.fillRect(l,n,i,a)),e.strokeStyle&&(r(e,t),t.strokeRect(l,n,i,a))},R=(e,t)=>{let{points:l}=e;o(e,t),r(e,t),t.beginPath();for(let n=0;n<l.length;n++){let i=l[n];n===0?t.moveTo(i[0],i[1]):t.lineTo(i[0],i[1])}e.closed&&t.closePath(),e.fillStyle&&t.fill(),e.strokeStyle&&t.stroke()},y=(e,t)=>{let{x:l,y:n,w:i,h:a}=e,f=new Path2D;return e.radii?f.roundRect(l,n,i,a,e.radii):f.rect(l,n,i,a),t&&(e.fillStyle&&(o(e,t),t.fill(f)),e.strokeStyle&&(r(e,t),t.stroke(f))),f},u=(e,t)=>{let{cx:l,cy:n,r:i}=e,a=e.startAngleRad===void 0?0:e.startAngleRad,f=e.endAngleRad===void 0?2*Math.PI:e.endAngleRad;t.beginPath(),o(e,t),r(e,t),t.arc(l,n,i,a,f,e.counterclockwise),e.fillStyle&&t.fill(),e.strokeStyle&&(r(e,t),t.stroke())},C=(e,t)=>{let{cx:l,cy:n,r:i}=e,a=e.startAngleRad===void 0?0:e.startAngleRad,f=e.endAngleRad===void 0?2*Math.PI:e.endAngleRad,d=new Path2D;return d.arc(l,n,i,a,f,e.counterclockwise),t&&(e.fillStyle&&(o(e,t),t.fill(d)),e.strokeStyle&&(r(e,t),t.stroke(d))),d};export{s as canvas,u as circle,C as circlePath,o as fill,R as path,g as rect,y as rectPath,r as stroke};
//# sourceMappingURL=mz-canvas.esm.js.map
