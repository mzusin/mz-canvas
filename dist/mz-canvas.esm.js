/* 
mzCanvas a TypeScript-based library for manipulating canvas element and 2D graphics in the browser.
Version: 1.0.8
Author: Miriam Zusin     
Contact: miriam.zusin@gmail.com
Documentation: https://github.com/mzusin/mz-canvas
Licensed GPLv3 for open source use, or Commercial License for commercial use - https://github.com/mzusin/index/blob/main/LICENSE.md                 
*/
var h=e=>!isNaN(parseFloat(e))&&isFinite(e);var g=(e,t)=>{for(let r of t){let n=r[1];if(n===void 0)continue;let a=r[0];e.setAttribute(a,n.toString())}},f=(e,t)=>{for(let r of e){let n=r[1];if(n===void 0)continue;let a=r[0];t[a]=n}},d=(e,t,r)=>{let n=h(r.width)&&h(r.height),a=n?r.width:0,l=n?r.height:0;if(!n){let i=!!e.parentNode;i||document.body.append(e);let m=e.getBoundingClientRect();a=m.width,l=m.height,i||e.remove()}let s=t==null?void 0:t.getImageData(0,0,e.width,e.height);e.width=a,e.height=l,t&&s&&t.putImageData(s,0,0)},M=e=>{let t=document.createElement("canvas");g(t,[["id",e.id],["class",e.classes],["style",e.style],["title",e.title],["tabindex",e.tabindex],["role",e.role],["aria-label",e.ariaLabel]]),e.fallback&&(t.textContent=e.fallback);let r=typeof t.getContext=="function"?t.getContext("2d"):null;return d(t,r,e),{ctx:r,$canvas:t}},o=(e,t)=>{f([["lineWidth",e.lineWidth],["strokeStyle",e.strokeStyle],["lineCap",e.lineCap],["lineJoin",e.lineJoin],["miterLimit",e.miterLimit],["lineDashOffset",e.lineDashOffset]],t),e.lineDashSegments&&t.setLineDash(e.lineDashSegments)},u=(e,t)=>{e.fillStyle!==void 0&&(t.fillStyle=e.fillStyle),f([["shadowOffsetX",e.shadowOffsetX],["shadowOffsetY",e.shadowOffsetY],["shadowBlur",e.shadowBlur],["shadowColor",e.shadowColor]],t)};var x=(e,t)=>{let{x1:r,y1:n,x2:a,y2:l}=e;t.save(),t.beginPath(),t.moveTo(r,n),t.lineTo(a,l),e.strokeStyle&&(o(e,t),t.stroke()),t.restore()},R=(e,t)=>{let{x1:r,y1:n,x2:a,y2:l}=e,s=new Path2D;return s.moveTo(r,n),s.lineTo(a,l),t&&(t.save(),e.strokeStyle&&(o(e,t),t.stroke(s)),t.restore()),s},w=(e,t)=>{let{x:r,y:n,w:a,h:l}=e;if(e.clear){t.clearRect(r,n,a,l);return}if(e.radii){t.save(),u(e,t),o(e,t),t.beginPath(),t.roundRect(r,n,a,l,e.radii),e.fillStyle&&t.fill(),e.strokeStyle&&t.stroke(),t.restore();return}t.save(),e.fillStyle&&(u(e,t),t.fillRect(r,n,a,l)),e.strokeStyle&&(o(e,t),t.strokeRect(r,n,a,l)),t.restore()},y=(e,t)=>{let{x:r,y:n,w:a,h:l}=e,s=new Path2D;return e.radii?s.roundRect(r,n,a,l,e.radii):s.rect(r,n,a,l),t&&(t.save(),e.fillStyle&&(u(e,t),t.fill(s)),e.strokeStyle&&(o(e,t),t.stroke(s)),t.restore()),s},b=(e,t)=>{let{points:r}=e;t.save(),u(e,t),o(e,t),t.beginPath();for(let n=0;n<r.length;n++){let a=r[n];n===0?t.moveTo(a[0],a[1]):t.lineTo(a[0],a[1])}e.closed&&t.closePath(),e.fillStyle&&t.fill(),e.strokeStyle&&t.stroke(),t.restore()},P=(e,t)=>{let{points:r}=e,n=new Path2D;for(let a=0;a<r.length;a++){let l=r[a];a===0?n.moveTo(l[0],l[1]):n.lineTo(l[0],l[1])}return e.closed&&n.closePath(),t&&(t.save(),e.fillStyle&&(u(e,t),t.fill(n)),e.strokeStyle&&(o(e,t),t.stroke(n)),t.restore()),n},D=(e,t)=>{let{cx:r,cy:n,r:a}=e,l=e.startAngleRad===void 0?0:e.startAngleRad,s=e.endAngleRad===void 0?2*Math.PI:e.endAngleRad;t.save(),t.beginPath(),u(e,t),o(e,t),t.arc(r,n,a,l,s,e.counterclockwise),e.fillStyle&&t.fill(),e.strokeStyle&&(o(e,t),t.stroke()),t.restore()},T=(e,t)=>{let{cx:r,cy:n,r:a}=e,l=e.startAngleRad===void 0?0:e.startAngleRad,s=e.endAngleRad===void 0?2*Math.PI:e.endAngleRad,i=new Path2D;return i.arc(r,n,a,l,s,e.counterclockwise),t&&(t.save(),e.fillStyle&&(u(e,t),t.fill(i)),e.strokeStyle&&(o(e,t),t.stroke(i)),t.restore()),i};export{M as canvas,D as circle,T as circlePath,u as fill,x as line,R as linePath,b as polynomial,P as polynomialPath,w as rect,y as rectPath,d as setCanvasSize,f as setContextProps,o as stroke};
//# sourceMappingURL=mz-canvas.esm.js.map
