{
  "version": 3,
  "sources": ["../src/core/canvas.ts", "../src/core/shapes/primitive-shapes.ts", "../src/index.ts"],
  "sourcesContent": ["export interface ICanvas {\n    width: number;\n    height: number;\n\n    id?: string;\n    classes?: string;\n    style?: string;\n    title?: string;\n    tabindex?: number;\n\n    // accessibility --------\n    role?: string;\n    fallback?: string;\n}\n\nconst setAttributes = ($canvas: HTMLCanvasElement, attributes: [string, string|number|undefined][]) => {\n    for(const attr of attributes){\n\n        const value = attr[1];\n        if(value === undefined) continue;\n\n        const key = attr[0];\n        $canvas.setAttribute(key, value.toString());\n    }\n};\n\nexport const canvas = (props: ICanvas) => {\n\n    const $canvas: HTMLCanvasElement = document.createElement('canvas');\n    $canvas.width = props.width;\n    $canvas.height = props.height;\n\n    setAttributes($canvas, [\n        ['id', props.id],\n        ['class', props.classes],\n        ['style', props.style],\n        ['title', props.title],\n        ['tabindex', props.tabindex],\n        ['role', props.role],\n    ]);\n\n    // Used to make the canvas accessible by providing fallback text\n    // to be displayed when the media doesn't load\n    // or the user is unable to experience it as intended\n    if(props.fallback){\n        $canvas.textContent = props.fallback;\n    }\n\n    const ctx = typeof $canvas.getContext === 'function' ? $canvas.getContext('2d') : null;\n\n    return { ctx, $canvas };\n};\n\nexport interface IStrokeProps {\n    strokeStyle?: string;\n    lineWidth?: number;\n}\n\nexport const stroke = (ctx: CanvasRenderingContext2D, props: IStrokeProps) => {\n    if(props.lineWidth){\n        ctx.lineWidth = props.lineWidth;\n    }\n\n    if(props.strokeStyle){\n        ctx.strokeStyle = props.strokeStyle;\n    }\n};\n\nexport interface IFillProps {\n    fillStyle?: string;\n}\n\nexport const fill = (ctx: CanvasRenderingContext2D, props: IFillProps) => {\n    if(props.fillStyle){\n        ctx.fillStyle = props.fillStyle;\n    }\n};", "import { fill, stroke } from '../canvas';\nimport { Vector2 } from 'mz-math/types/types';\n\nexport interface IRectProps {\n    x: number;\n    y: number;\n    w: number;\n    h: number;\n    radii?: number|number[]; // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/roundRect\n\n    clear?: boolean;\n    fillStyle?: string;\n    strokeStyle?: string;\n    lineWidth?: number;\n}\n\nexport const rect = (ctx: CanvasRenderingContext2D, props: IRectProps) => {\n\n    const { x, y, w, h} = props;\n\n    if(props.clear){\n        ctx.clearRect(x, y, w, h);\n        return;\n    }\n\n    if(props.radii){\n        fill(ctx, props);\n        stroke(ctx, props);\n\n        ctx.beginPath();\n\n        // @ts-ignore\n        ctx.roundRect(x, y, w, h, props.radii)\n        if(props.fillStyle){\n            ctx.fill();\n        }\n\n        if(props.strokeStyle){\n            ctx.stroke();\n        }\n        return;\n    }\n\n    if(props.fillStyle){\n        fill(ctx, props);\n        ctx.fillRect(x, y, w, h);\n    }\n\n    if(props.strokeStyle){\n        stroke(ctx, props);\n        ctx.strokeRect(x, y, w, h);\n    }\n};\n\nexport interface IPathProps {\n\n    points: Vector2[];\n\n    fillStyle?: string;\n    strokeStyle?: string;\n    lineWidth?: number;\n}\n\nexport const path = (ctx: CanvasRenderingContext2D, props: IPathProps) => {\n\n    const { points } = props;\n\n    fill(ctx, props);\n    stroke(ctx, props);\n\n    ctx.beginPath();\n\n    for(let i= 0; i<points.length; i++) {\n        const point = points[i];\n\n        if(i === 0){\n            ctx.moveTo(point[0], point[1]);\n        }\n        else{\n            ctx.lineTo(point[0], point[1]);\n        }\n    }\n\n    ctx.closePath();\n\n    if(props.fillStyle){\n        ctx.fill();\n    }\n\n    if(props.strokeStyle){\n        ctx.stroke();\n    }\n\n};", "import * as canvas from './core/canvas';\nimport * as primitiveShapes from './core/shapes/primitive-shapes';\n\nconst api = {\n    ...canvas,\n    ...primitiveShapes,\n};\n\ndeclare global {\n    interface Window {\n        mzCanvas: typeof api,\n    }\n}\n\nwindow.mzCanvas = window.mzCanvas || api;\n\nexport * from './core/canvas';\nexport * from './core/shapes/primitive-shapes';"],
  "mappings": ";;;;;;;;6ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,YAAAE,EAAA,SAAAC,EAAA,WAAAC,IAeA,IAAMC,EAAgB,CAACC,EAA4BC,IAAoD,CACnG,QAAUC,KAAQD,EAAW,CAEzB,IAAME,EAAQD,EAAK,CAAC,EACpB,GAAGC,IAAU,OAAW,SAExB,IAAMC,EAAMF,EAAK,CAAC,EAClBF,EAAQ,aAAaI,EAAKD,EAAM,SAAS,CAAC,EAElD,EAEaP,EAAUS,GAAmB,CAEtC,IAAML,EAA6B,SAAS,cAAc,QAAQ,EAClE,OAAAA,EAAQ,MAAQK,EAAM,MACtBL,EAAQ,OAASK,EAAM,OAEvBN,EAAcC,EAAS,CACnB,CAAC,KAAMK,EAAM,EAAE,EACf,CAAC,QAASA,EAAM,OAAO,EACvB,CAAC,QAASA,EAAM,KAAK,EACrB,CAAC,QAASA,EAAM,KAAK,EACrB,CAAC,WAAYA,EAAM,QAAQ,EAC3B,CAAC,OAAQA,EAAM,IAAI,CACvB,CAAC,EAKEA,EAAM,WACLL,EAAQ,YAAcK,EAAM,UAKzB,CAAE,IAFG,OAAOL,EAAQ,YAAe,WAAaA,EAAQ,WAAW,IAAI,EAAI,KAEpE,QAAAA,CAAQ,CAC1B,EAOaF,EAAS,CAACQ,EAA+BD,IAAwB,CACvEA,EAAM,YACLC,EAAI,UAAYD,EAAM,WAGvBA,EAAM,cACLC,EAAI,YAAcD,EAAM,YAEhC,EAMaR,EAAO,CAACS,EAA+BD,IAAsB,CACnEA,EAAM,YACLC,EAAI,UAAYD,EAAM,UAE9B,EC5EA,IAAAE,EAAA,GAAAC,EAAAD,EAAA,UAAAE,EAAA,SAAAC,IAgBO,IAAMC,EAAO,CAACC,EAA+BC,IAAsB,CAEtE,GAAM,CAAE,EAAAC,EAAG,EAAAC,EAAG,EAAAC,EAAG,EAAAC,CAAC,EAAIJ,EAEtB,GAAGA,EAAM,MAAM,CACXD,EAAI,UAAUE,EAAGC,EAAGC,EAAGC,CAAC,EACxB,OAGJ,GAAGJ,EAAM,MAAM,CACXK,EAAKN,EAAKC,CAAK,EACfM,EAAOP,EAAKC,CAAK,EAEjBD,EAAI,UAAU,EAGdA,EAAI,UAAUE,EAAGC,EAAGC,EAAGC,EAAGJ,EAAM,KAAK,EAClCA,EAAM,WACLD,EAAI,KAAK,EAGVC,EAAM,aACLD,EAAI,OAAO,EAEf,OAGDC,EAAM,YACLK,EAAKN,EAAKC,CAAK,EACfD,EAAI,SAASE,EAAGC,EAAGC,EAAGC,CAAC,GAGxBJ,EAAM,cACLM,EAAOP,EAAKC,CAAK,EACjBD,EAAI,WAAWE,EAAGC,EAAGC,EAAGC,CAAC,EAEjC,EAWaG,EAAO,CAACR,EAA+BC,IAAsB,CAEtE,GAAM,CAAE,OAAAQ,CAAO,EAAIR,EAEnBK,EAAKN,EAAKC,CAAK,EACfM,EAAOP,EAAKC,CAAK,EAEjBD,EAAI,UAAU,EAEd,QAAQ,EAAG,EAAG,EAAES,EAAO,OAAQ,IAAK,CAChC,IAAMC,EAAQD,EAAO,CAAC,EAEnB,IAAM,EACLT,EAAI,OAAOU,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,EAG7BV,EAAI,OAAOU,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,EAIrCV,EAAI,UAAU,EAEXC,EAAM,WACLD,EAAI,KAAK,EAGVC,EAAM,aACLD,EAAI,OAAO,CAGnB,EC1FA,IAAMW,EAAMC,IAAA,GACLC,GACAC,GASP,OAAO,SAAW,OAAO,UAAYH",
  "names": ["canvas_exports", "__export", "canvas", "fill", "stroke", "setAttributes", "$canvas", "attributes", "attr", "value", "key", "props", "ctx", "primitive_shapes_exports", "__export", "path", "rect", "rect", "ctx", "props", "x", "y", "w", "h", "fill", "stroke", "path", "points", "point", "api", "__spreadValues", "canvas_exports", "primitive_shapes_exports"]
}
